名称：用户图形界面
文件：gui


相对上一个版本：
无


当前版本：

【V1.0.0】

--按钮，简单的普通按钮，可以添加触发代码和添加显示文字
[注释：添加文字前必须初始化字体，并添加一个字体名称为t的任意字体]

--图表，对于按钮的包装容器，可用作子菜单

====================
--初始化按钮系统

initButton(table)

初始化按钮系统，传入一个鼠标表的引用
[注释：鼠标表格式请翻阅本文最底部]

====================
--初始化图表系统

initMapTable()

初始化图表系统，必须先初始化按钮系统
[注释：图表系统只是按钮的一个容器，方便对按钮的组管理，但是它也包含了一些方便的功能]

====================
--获得按钮

getButton(string)

获得一个按钮的数据，返回table

====================
--添加按钮

addButton(string)

添加一个按钮

====================
--设置按钮的可用性

setButtonEmploy(string)

设置一个按钮的可使用性
[注释：不可使用时，按钮不会被绘制和触发]

====================
--设置图表的可用性

setMapTableEmploy(string)

设置一个图表的可使用性
[注释：不可使用时，图表不会被绘制和触发]

====================
--获得按钮的状态

getButtonState()

获得一个按钮的状态，返回number，2为按下后松开的状态，1为按下的状态，0为未使用状态

====================
--按钮触发检查器

button(string)

检查一个指定按钮是否被触发

====================
--绘制按钮

drawButton(string)

绘制一个指定按钮

====================
--重置按钮

resButton(string)

复位一个按钮的状态，使其变成未使用状态

====================
--破坏按钮

desButton(string)

释放一个按钮在系统中的引用，交由GC处理

====================
--添加一个图表

addMapTable(string)

添加一个图表
	
	--设置一个开启按钮
	setOnButton(string)
	--设置一个关闭按钮
	setOffButton(string)
	--添加一个按钮
	addButton(string)
	[注释：传入已经存在的按钮的名称，将其绑定至此图表，你依然可以单独使用这个按钮]

====================
--图表检查器

mapTable(string)

检查一个图表的使用情况，这包含了是否开启图表和是否使用了某个图表内部的按钮的情况
[注释：图表由一个开启按钮和一个关闭按钮控制其的启动和关闭]

====================
--绘制图表

drawMapTable(string)

绘制一张指定的图表

====================
--辅助函数，碰撞盒

collision()

一个辅助检查触发的东西

====================
--辅助函数，屏蔽布

shieldedCloth(...)

一个屏蔽图表范围内的按钮的东西

====================
--辅助函数，重置屏蔽布

recShieldedCloth(...)

让屏蔽的情况变成false

额外注释：
====================
--错误检查

如果使用的按钮或图表不存在，将返回试图调用的按钮或图表的名称并提示不存在，且中断运行

--鼠标表格式

mouse = {
left={ key=false, state=0, x=-1, y=-1 },  --左键
right={ key=false, state=0, x=-1, y=-1 }, --右键
x=-1, y=-1, dx=-1, dy=-1 		  --光标
}}